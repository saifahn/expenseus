import Head from "next/head";
import { useState, useRef, useEffect } from "react";
import { User } from "components/UserList";
import { UserAPI } from "api";

export default function Home() {
  const [self, setSelf] = useState<User>();
  const [{ status, error }, setStatus] = useState({
    status: "idle",
    error: null,
  });
  const cancelled = useRef(false);

  async function fetchSelf() {
    try {
      setStatus({ status: "loading", error: null });
      const api = new UserAPI();
      const self = await api.getSelf();
      if (!cancelled.current) {
        setSelf(self);
        setStatus({ status: "fulfilled", error: null });
      }
    } catch (error) {
      if (!cancelled.current) {
        return setStatus({ status: "rejected", error });
      }
    }
  }

  useEffect(() => {
    fetchSelf();
    return () => {
      cancelled.current = true;
    };
  }, []);

  return (
    <div>
      {status === "loading" ? (
        <div>Loading</div>
      ) : (
        <>
          <Head>
            <title>Expenseus</title>
            <meta name="description" content="Generated by create next app" />
            <link rel="icon" href="/favicon.ico" />
          </Head>
          <h1 className="text-4xl">Welcome to Expenseus</h1>
          {error ? (
            // currently we are using 401 to check if a user is not signed in
            // we should make this more granular in the future potentially
            // for different 401s?
            error === 401 ? (
              <a
                href={`${process.env.NEXT_PUBLIC_API_BASE_URL}/login_google`}
                className="inline-flex items-center border rounded-md px-3 py-2 mt-4"
              >
                <img
                  src="/images/google-g-logo.svg"
                  alt="Google G Logo"
                  height={24}
                  width={24}
                />
                <span className="ml-3">Sign in with Google</span>
              </a>
            ) : (
              <>
                <p>There was an error. Please refresh and try again.</p>
              </>
            )
          ) : (
            self && (
              <>
                <p className="mt-4" data-testid="welcome">
                  Hi {self.username}!
                </p>
                <a
                  href={`${process.env.NEXT_PUBLIC_API_BASE_URL}/logout`}
                  className="inline-flex items-center border rounded-md px-3 py-2 mt-4"
                >
                  <span className="">Log out</span>
                </a>
              </>
            )
          )}
        </>
      )}
    </div>
  );
}
